#library "wepacs"

// [Mike] Scripts file for changing colors based on your weapon
#include "zcommon.acs"// [Lego] Always include this before 8bdmlib
#include "8bdmlib.acs"// included with MM8BDM under acs_source.
					  // See 8bdmlib.acs for details.

#DEFINE MAX_WEAPONS_GLOBAL 250 // Maximum number of weapons for the following arrays
// v6's weapon total would be 94
// v7's weapon total would be 103
#DEFINE MAX_BUSTERS 7 // Maximum number of non-ammo buster upgrades for the following arrays
// v7's max busters would be 8

// Array Layout
//  0 - Weapon Name according to the Engine (Ex. RollingCutterWep)
//  1 - Weapon Ammo according to the Engine (Ex. RollingCutterAmmo)
//  2 - Weapon Name according to the Player (Ex. Rolling Cutter)
//  3 - Ammo gain multiplier (0.0 - 1.0)
//  4 - Can be given by Eddie? (YES/NO)
//  5 - Can be Stolen by Reggae (no longer used)? (YES/NO)
//  6 - LMS Slot

str weapons_ammo[MAX_WEAPONS_GLOBAL][7] = 
{
{"TrebleBoost", "TrebleBoostAmmo", "Treble Boost", 1.0, "NO", "NO", "SLOT_NONE"},

{"SuperArmWep", "SuperArmAmmo", "Super Arm", 1.0, "YES", "YES", "SLOT_POWER"},
{"HyperBombWep", "HyperBombAmmo", "Hyper Bomb", 1.0, "YES", "YES", "SLOT_POWER"},
{"IceSlasherWep", "IceSlasherAmmo", "Ice Slasher", 1.0, "YES", "YES", "SLOT_RAPID"},
{"ThunderBeamWep", "ThunderBeamAmmo", "Thunder Beam", 1.0, "YES", "YES", "SLOT_RANGED"},
{"FireStormWep", "FireStormAmmo", "Fire Storm", 1.0, "YES", "YES", "SLOT_RANGED"},
{"RollingCutterWep", "RollingCutterAmmo", "Rolling Cutter", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"TimeSlowWep", "TimeSlowAmmo", "Time Slow", 1.0, "YES", "YES", "SLOT_NONE"},
{"OilSliderWep", "OilSliderAmmo", "Oil Slider", 1.0, "YES", "YES", "SLOT_CLOSE"},

{"BubbleLeadWep", "BubbleLeadAmmo", "Bubble Lead", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"MetalBladeWep", "MetalBladeAmmo", "Metal Blade", 1.0, "YES", "YES", "SLOT_RAPID"},
{"AtomicFireWep", "AtomicFireAmmo", "Atomic Fire", 1.0, "YES", "YES", "SLOT_POWER"},
{"LeafShieldWep", "LeafShieldAmmo", "Leaf Shield", 1.0, "YES", "YES", "SLOT_SHIELD"},
{"AirShooterWep", "AirShooterAmmo", "Air Shooter", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"QuickBoomerangWep", "QuickBoomerangAmmo", "Quick Boomerang", 1.0, "YES", "YES", "SLOT_RAPID"},
{"CrashBombWep", "CrashBombAmmo", "Crash Bomb", 1.0, "YES", "YES", "SLOT_POWER"},
{"TimeStopperWep", "TimeStopperAmmo", "Time Stopper", 0.25, "YES", "YES", "SLOT_NONE"}, 

{"MagnetMissileWep", "MagnetMissileAmmo", "Magnet Missile", 1.0, "YES", "YES", "SLOT_RANGED"},
{"TopSpinWep", "TopSpinAmmo", "Top Spin", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"NeedleCannonWep", "NeedleCannonAmmo", "Needle Cannon", 1.0, "YES", "YES", "SLOT_RAPID"},
{"ShadowBladeWep", "ShadowBladeAmmo", "Shadow Blade", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"GeminiLaserWep", "GeminiLaserAmmo", "Gemini Laser", 1.0, "YES", "YES", "SLOT_RANGED"},
{"SearchSnakeWep", "SearchSnakeAmmo", "Search Snake", 1.0, "YES", "YES", "SLOT_RANGED"},
{"HardKnuckleWep", "HardKnuckleAmmo", "Hard Knuckle", 1.0, "YES", "YES", "SLOT_POWER"},
{"SparkShockWep", "SparkShockAmmo", "Spark Shock", 1.0, "YES", "YES", "SLOT_RANGED"},

{"DrillBombWep", "DrillBombAmmo", "Drill Bomb", 1.0, "YES", "YES", "SLOT_POWER"},
{"RingBoomerangWep", "RingBoomerangAmmo", "Ring Boomerang", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"DustCrusherWep", "DustCrusherAmmo", "Dust Crusher", 1.0, "YES", "YES", "SLOT_RANGED"},
{"PharaohShotWep", "PharaohShotAmmo", "Pharaoh Shot", 1.0, "YES", "YES", "SLOT_POWER"},
{"SkullBarrierWep", "SkullBarrierAmmo", "Skull Barrier", 1.0, "YES", "YES", "SLOT_SHIELD"},
{"DiveMissileWep", "DiveMissileAmmo", "Dive Missile", 1.0, "YES", "YES", "SLOT_RANGED"},
{"RainFlushWep", "RainFlushAmmo", "Rain Flush", 1.0, "YES", "YES", "SLOT_NONE"},
{"FlashStopperWep", "FlashStopperAmmo", "Flash Stopper", 1.0, "YES", "YES", "SLOT_NONE"},

{"NapalmBombWep", "NapalmBombAmmo", " Napalm Bomb", 1.0, "YES", "YES", "SLOT_POWER"},
{"ChargeKickWep", "ChargeKickAmmo", "Charge Kick", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"GyroAttackWep", "GyroAttackAmmo", "Gyro Attack", 1.0, "YES", "YES", "SLOT_RANGED"},
{"PowerStoneWep", "PowerStoneAmmo", "Power Stone", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"WaterWaveWep", "WaterWaveAmmo", "Water Wave", 1.0, "YES", "YES", "SLOT_RAPID"},
{"CrystalEyeWep", "CrystalEyeAmmo", "Crystal Eye", 1.0, "YES", "YES", "SLOT_POWER"},
{"StarCrashWep", "StarCrashAmmo", "Star Crash", 1.0, "YES", "YES", "SLOT_SHIELD"},
{"GravityHoldWep", "GravityHoldAmmo", "Gravity Hold", 1.0, "YES", "YES", "SLOT_NONE"},

{"BlizzardAttackWep", "BlizzardAttackAmmo", "Blizzard Attack", 1.0, "YES", "YES", "SLOT_RANGED"},
{"FlameBlastWep", "FlameBlastAmmo", "Flame Blast", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"YamatoSpearWep", "YamatoSpearAmmo", "Yamato Spear", 1.0, "YES", "YES", "SLOT_RAPID"},
{"PlantBarrierWep", "PlantBarrierAmmo", "Plant Barrier", 1.0, "YES", "YES", "SLOT_SHIELD"},
{"SilverTomahawkWep", "SilverTomahawkAmmo", "Silver Tomahawk", 1.0, "YES", "YES", "SLOT_RANGED"},
{"WindStormWep", "WindStormAmmo", "Wind Storm", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"KnightCrushWep", "KnightCrushAmmo", "Knight Crush", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"CentaurFlashWep", "CentaurFlashAmmo", "Centaur Flash", 1.0, "YES", "YES", "SLOT_NONE"},

{"FreezeCrackerWep", "FreezeCrackerAmmo", "Freeze Cracker", 1.0, "YES", "YES", "SLOT_RANGED"},
{"NoiseCrushWep", "NoiseCrushAmmo", "Noise Crush", 1.0, "YES", "YES", "SLOT_RANGED"},
{"WildCoilWep", "WildCoilAmmo", "Wild Coil", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"DangerWrapWep", "DangerWrapAmmo", "Danger Wrap", 1.0, "YES", "YES", "SLOT_POWER"},
{"ScorchWheelWep", "ScorchWheelAmmo", "Scorch Wheel", 1.0, "YES", "YES", "SLOT_SHIELD"},
{"JunkShieldWep", "JunkShieldAmmo", "Junk Shield", 1.0, "YES", "YES", "SLOT_SHIELD"},
{"SlashClawWep", "SlashClawAmmo", "Slash Claw", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"ThunderBoltWep", "ThunderBoltAmmo", "Thunder Bolt", 1.0, "YES", "YES", "SLOT_RANGED"},

{"AstroCrushWep", "AstroCrushAmmo", "Astro Crush", 1.0, "YES", "YES", "SLOT_NONE"},
{"FlameSwordWep", "FlameSwordAmmo", "Flame Sword", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"ThunderClawWep", "ThunderClawAmmo", "Thunder Claw", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"HomingSniperWep", "HomingSniperAmmo", "Homing Sniper", 1.0, "YES", "YES", "SLOT_RANGED"},
{"WaterBalloonWep", "WaterBalloonAmmo", "Water Balloon", 1.0, "YES", "YES", "SLOT_RAPID"},
{"MegaBallWep", "MegaBallAmmo", "Mega Ball", 1.0, "YES", "YES", "SLOT_RANGED"},
{"FlashBombWep", "FlashBombAmmo", "Flash Bomb", 1.0, "YES", "YES", "SLOT_POWER"},
{"IceWaveWep", "IceWaveAmmo", "Ice Wave", 1.0, "YES", "YES", "SLOT_RANGED"},
{"TornadoHoldWep", "TornadoHoldAmmo", "Tornado Hold", 1.0, "YES", "YES", "SLOT_CLOSE"},

{"TenguBladeWep", "TenguBladeAmmo", "Tengu Blade", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"WaveBurnerWep", "WaveBurnerAmmo", "Wave Burner", 1.0, "YES", "YES", "SLOT_RAPID"},
{"SpreadDrillWep", "SpreadDrillAmmo", "Spread Drill", 1.0, "YES", "YES", "SLOT_POWER"},
{"MagicCardWep", "MagicCardAmmo", "Magic Card", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"RemoteMineWep", "RemoteMineAmmo", "Remote Mine", 1.0, "YES", "YES", "SLOT_POWER"},
{"CopyVisionWep", "CopyVisionAmmo", "Copy Vision", 1.0, "YES", "YES", "SLOT_RANGED"},
{"IceWallWep", "IceWallAmmo", "Ice Wall", 1.0, "YES", "YES", "SLOT_SHIELD"},
{"LightningBoltWep", "LightningBoltAmmo", "Lightning Bolt", 1.0, "YES", "YES", "SLOT_NONE"},

{"PlugBallWep", "PlugBallAmmo", "Plug Ball", 1.0, "YES", "YES", "SLOT_RAPID"},
{"LaserTridentWep", "LaserTridentAmmo", "Laser Trident", 1.0, "YES", "YES", "SLOT_RANGED"},
{"BlackHoleBombWep", "BlackHoleBombAmmo", "Black Hole Bomb", 1.0, "YES", "YES", "SLOT_NONE"},
{"JewelSatelliteWep", "JewelSatelliteAmmo", "Jewel Satellite", 1.0, "YES", "YES", "SLOT_SHIELD"},
{"ConcreteShotWep", "ConcreteShotAmmo", "Concrete Shot", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"TornadoBlowWep", "TornadoBlowAmmo", "Tornado Blow", 1.0, "YES", "YES", "SLOT_NONE"},
{"HornetChaserWep", "HornetChaserAmmo", "Hornet Chaser", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"MagmaBazookaWep", "MagmaBazookaAmmo", "Magma Bazooka", 1.0, "YES", "YES", "SLOT_CLOSE"},
 
{"SolarBlazeWep", "SolarBlazeAmmo", "Solar Blaze", 1.0, "YES", "YES", "SLOT_NONE"},


//{"WheelCutterWep", "WheelCutterAmmo", "Wheel Cutter", 1.0, "YES", "YES", "SLOT_CLOSE"},
//{"ReboundStrikerWep", "ReboundStrikerAmmo", "Rebound Striker", 1.0, "YES", "YES", "SLOT_RANGED"},
//{"ThunderWoolWep", "ThunderWoolAmmo", "Thunder Wool", 1.0, "YES", "YES", "SLOT_CLOSE"},
//{"CommandoBombWep", "CommandoBombAmmo", "Commando Bomb", 1.0, "YES", "YES", "SLOT_POWER"},
//{"ChillSpikeWep", "ChillSpikeAmmo", "Chill Spike", 1.0, "YES", "YES", "SLOT_CLOSE"},
//{"WaterShieldWep", "WaterShieldAmmo", "Water Shield", 1.0, "YES", "YES", "SLOT_SHIELD"},
//{"TripleBladeWep", "TripleBladeAmmo", "TripleBlade", 1.0, "YES", "YES", "SLOT_CLOSE",},

/*
{"GrabBusterWep", "GrabBusterAmmo", "Grab Buster", 1.0, "YES", "YES", "SLOT_RANGED"},
{"BubbleBombWep", "BubbleBombAmmo", "BubbleBomb", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"PhotonMissileWep", "PhotonMissileAmmo", "Photon Missile", 1.0, "YES", "YES", "SLOT_POWER"},
{"SaltWaterWep", "SaltWaterAmmo", "Salt Water", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"ElectricShockWep", "ElectricShockAmmo", "Commando Bomb", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"BlackHoleWep", "BlackHoleAmmo", "Black Hole", 1.0, "YES", "YES", "SLOT_NONE"},
{"DeepDiggerWep", "DeepDiggerAmmo", "Deep Digger", 1.0, "YES", "YES", "SLOT_POWER"},
{"BreakDashWep", "BreakDashAmmo", "Break Dash", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"SparkChaserWep", "SparkChaserAmmo", "Spark Chaser", 1.0, "YES", "YES", "SLOT_RANGED"},
*/
{"SakugarneWep", "SakugarneAmmo", "Sakugarne", 1.0, "YES", "YES", "SLOT_CLOSE"},
{"BalladeCrackerWep", "BalladeCrackerAmmo", "Ballade Cracker", 1.0, "YES", "YES", "SLOT_POWER"},
{"ScrewCrusherWep", "ScrewCrusherAmmo", "Screw Crusher", 1.0, "YES", "YES", "SLOT_RAPID"},
{"MirrorBusterWep", "MirrorBusterAmmo", "Mirror Buster", 1.0, "YES", "YES", "SLOT_SHIELD"},

{"ApexLaserWep", "ApexAmmo", "Apex Laser", 0.0, "YES", "NO","SLOT_NONE"},
{"AquaPunchWep", "AquaPunchammo", "Aqua Punch",1.0, "YES", "YES","SLOT_POWER"},
{"BeeOrderWep", "BeeOrderAmmo", "Bee Order",1.0, "YES", "YES","SLOT_SHIELD"},
{"BlastFreezeWep", "BlastFreezeAmmo", "Blast Freeze",1.0, "YES", "YES","SLOT_POWER"},
{"BlazeKickWep", "BlazeKickAmmo", "Blaze Kick",1.0, "YES", "YES","SLOT_CLOSE"},
{"BlazingSoulWep", "SoulAmmo", "Blazing Soul",1.0, "YES", "YES","SLOT_RANGED"},
{"BombSniperWep", "BombSniperAmmo", "Bomb Sniper",1.0, "YES", "YES","SLOT_RAPID"},
{"BoulderCrackerWep", "BoulderAmmo", "Boulder Cracker",1.0, "YES", "YES","SLOT_CLOSE"},
{"BulletSeedWep", "BulletSeedAmmo", "Bullet Seed",1.0, "YES", "YES","SLOT_RAPID"},
{"ChargeBeamWep", "chargebeamammo", "ChargeBeam",1.0, "YES", "YES","SLOT_RANGED"},
{"CloudBomberWep", "CloudBomberAmmo", "Cloud Bomber",1.0, "YES", "YES","SLOT_RANGED"},
{"CoalShotWep", "CoalShotAmmo", "Coal Shot","YES", 1.0, "YES","SLOT_RAPID"},
{"CometDashWep", "CometDashAmmo", "Comet Dash",1.0, "YES", "YES","SLOT_CLOSE"},
{"CometLauncherWep", "CometLauncherAmmo", "Comet Launcher",1.0, "YES", "YES","SLOT_POWER"},
{"CrossFlameWep", "CrossFlameAmmo", "Cross Flame",1.0, "YES", "YES","SLOT_CLOSE"},
{"CrossLightWep", "CrossAmmo", "Cross Light",1.0, "YES", "YES","SLOT_RANGED"},
{"CrystalMineWep", "CrystalMineAmmo", "Crystal Mine",1.0, "YES", "YES","SLOT_CLOSE"},
{"DangerFieldWep", "DangerFieldAmmo", "Danger Field",1.0, "YES", "YES","SLOT_SHIELD"},
{"EternalNight", "nightammo", "Eternal Night","YES", 1.0, "YES","SLOT_SHIELD"},
{"DelayBusterWep", "DelayBusterAmmo", "Delay Buster",1.0, "YES", "YES","SLOT_RAPID"},
{"DimensionalWaveWep", "DimensionalWaveAmmo", "Dimensional Wave",1.0, "YES", "YES","SLOT_RANGED"},
{"DizzyBombWep", "DizzyAmmo", "Dizzy Bomb",1.0, "YES", "YES","SLOT_POWER"},
{"DoubleNapalmWep", "DoubleNapalmAmmo", "Double Napalm",1.0, "YES", "YES","SLOT_POWER"},
{"DrillArmWep", "DrillArmAmmo", "Drill Arm",1.0, "YES", "YES","SLOT_CLOSE"},
{"DrillTorpWep", "DrillTorpAmmo", "Drill Torpedo",1.0, "YES", "YES","SLOT_RAPID"},
{"DumplingBombWep", "DumplingBombAmmo", "Dumpling Bomb",1.0, "YES", "YES","SLOT_RAPID"},
{"DustVaccumWep", "DustVaccumAmmo", "Dust Vacuum",1.0, "YES", "YES","SLOT_RANGED"},
{"EqualizerWep", "EqualizerAmmo", "Equalizer",1.0, "YES", "YES","SLOT_CLOSE"},
{"FadeLauncherWep", "FadeLauncherAmmo", "Fade Launcher",1.0, "YES", "YES","SLOT_RANGED"},
{"FellStingerWep", "FellStingerAmmo", "Fell Stinger",1.0, "YES", "YES","SLOT_RAPID"},
{"FireBallWep", "FireBallAmmo", "Fire Ball",1.0, "YES", "YES","SLOT_RANGED"},
{"fireblastWep", "FireBlastAmmo", "Fire Blast",1.0, "YES", "YES","SLOT_POWER"},
{"FireWorksWep", "FireWorksAmmo", "Fire Works",1.0, "YES", "YES","SLOT_CLOSE"},
{"FizzBombWep", "FizzBombAmmo", "Fizz Bomb",1.0, "YES", "YES","SLOT_POWER"},
{"FlameSpoutWep", "FlameSpoutAmmo", "Flame Spout",1.0, "YES", "YES","SLOT_POWER"},
{"FractalLaserWep", "FractalLaserAmmo", "Fractal Laser",1.0, "YES", "YES","SLOT_RANGED"},
{"FreezeDryWep", "FreezeDryAmmo", "Freeze Dry",1.0, "YES", "YES","SLOT_CLOSE"},
{"FrenzyPlantWep", "FrenzyPlantAmmo", "Frenzy Plant",1.0, "YES", "YES","SLOT_RANGED"},
{"FridgeBusterWep", "FridgeAmmo", "Fridge Buster",1.0, "YES", "YES","SLOT_SHIELD"},
{"FrostBombWep", "FrostBombAmmo", "Frost Bomb",1.0, "YES", "YES","SLOT_RANGED"},
{"GemCannonWep", "GemCannonAmmo", "Gem Cannon",1.0, "YES", "YES","SLOT_RANGED"},
{"GigaDrainWep", "GigaDrainAmmo", "Giga Drain",1.0, "YES", "YES","SLOT_CLOSE"},
{"GimmickStarWep", "GimmickStarAmmo", "Gimmick Star",1.0, "YES", "YES","SLOT_POWER"},
{"GlueShotWep", "GlueShotAmmo", "Glue Shot",1.0, "YES", "YES","SLOT_RANGED"},
{"GravityHoleWep", "GravityHoleAmmo", "Gravity Hole",1.0, "YES", "YES","SLOT_RANGED"},
{"HailShotgunWep", "HailShotGunAmmo", "Hail Shotgun",1.0, "YES", "YES","SLOT_RANGED"},
{"HammerTailWep", "TailAmmo", "Hammer Tail",1.0, "YES", "YES","SLOT_CLOSE"},
{"HammerTossWep", "HammerTossAmmo", "Hammer Toss",1.0, "YES", "YES","SLOT_RANGED"},
{"HCRBoomerangWep", "HCRAmmo", "HCR Boomerang",1.0, "YES", "YES","SLOT_RANGED"},
{"HeadCrashWep", "HeadCrashAmmo", "Head Crash",1.0, "YES", "YES","SLOT_CLOSE"},
{"HealBlockWep", "HealAmmo", "Heal Block",1.0, "YES", "YES","SLOT_SHIELD"},
{"HellWheelWep", "HellWheelAmmo", "Hell Wheel",1.0, "YES", "YES","SLOT_CLOSE"},
{"IceBeamWep", "IceBeamAmmo", "Ice Beam",1.0, "YES", "YES","SLOT_RANGED"},
{"IceShardWep", "IceShardAmmo", "Ice Shard",1.0, "YES", "YES","SLOT_RAPID"},
{"IceShurikensWep", "IceShurikensAmmo", "Ice Shurikens",1.0, "YES", "YES","SLOT_RAPID"},
{"IceSpikeWep", "IceSpikeAmmo", "Ice Spike",1.0, "YES", "YES","SLOT_CLOSE"},
{"JetMissileWep", "JetMissileAmmo", "Jet Missile",1.0, "YES", "YES","SLOT_RANGED"},
{"LaserMissileWep", "LaserMissileAmmo", "Laser Missile",1.0, "YES", "YES","SLOT_RANGED"},
{"LeafStormWep", "LeafStormAmmo", "Leaf Storm",1.0, "YES", "YES","SLOT_RANGED"},
{"LeechSeedWep", "LeechAmmo", "Leech Seed",1.0, "YES", "YES","SLOT_CLOSE"},
{"LightningChainWep", "ChainAmmo", "Lightning Chain",1.0, "YES", "YES","SLOT_RANGED"},
{"MagnetBombWep", "MagnetBombAmmo", "Magnet Bomb",1.0, "YES", "YES","SLOT_RANGED"},
{"MagnetDrillWep", "MagnetDrillAmmo", "Magnet Drill",1.0, "YES", "YES","SLOT_POWER"},
{"MistFormWep", "MistAmmo", "Mist Form",1.0, "YES", "YES","SLOT_SHIELD"},
{"MoonBlastWep", "MoonBlastAmmo", "Moon Blast",1.0, "YES", "YES","SLOT_POWER"},
{"NailShieldWep", "NailShieldAmmo", "Nail Shield",1.0, "YES", "YES","SLOT_SHIELD"},
{"RecycleInhalerWep", "RecycleInhalerAmmo", "Recycle Inhaler",1.0, "YES", "YES","SLOT_CLOSE"},
{"NightDazeWep", "NightDazeAmmo", "Night Daze",1.0, "YES", "YES","SLOT_CLOSE"},
{"NitroBlastWep", "NitroBlastAmmo", "Nitro Blast",1.0, "YES", "YES","SLOT_POWER"},
{"NMGWep", "MachineAmmo", "N M G",1.0, "YES", "YES","SLOT_RAPID"},
{"NoteableShotWep", "NoteableShotAmmo", "Noteable Shot",1.0, "YES", "YES","SLOT_CLOSE"},
{"OblivionBusterWep", "NukeAmmo", "Oblivion Buster",0.0, "YES", "YES","SLOT_NONE"},
{"OctaZookaWep", "OctaZookaAmmo", "Octa Zooka",1.0, "YES", "YES","SLOT_RANGED"},
{"OpticLaserWep", "OpticLaserAmmo", "Optic Laser",1.0, "YES", "YES","SLOT_RANGED"},
{"PaintGunWep", "PaintGunAmmo", "Paint Gun",1.0, "YES", "YES","SLOT_RANGED"},
{"PerfectChainsawWep", "PerfectChainsawAmmo", "Perfect Chainsaw",1.0, "YES", "YES","SLOT_CLOSE"},
{"PharaohSacrificeWep", "PharaohSacrificeAmmo", "Pharaoh Sacrifice",1.0, "YES", "YES","SLOT_RANGED"},
{"PharaohShotGunWep", "PharaohShotGunAmmo", "Pharaoh Shot Gun",1.0, "YES", "YES","SLOT_POWER"},
{"PhoenixRodWep", "PhoenixRodAmmo", "Phoenix Rod",1.0, "YES", "YES","SLOT_POWER"},
{"PiaofuFengWep", "PiaofuFengAmmo", "Piaofu Feng",1.0, "YES", "YES","SLOT_RANGED"},
{"PinMissileWep", "PinMissileAmmo", "Pin Missile",1.0, "YES", "YES","SLOT_RAPID"},
{"PKFireWep", "PKFireAmmo", "PK Fire",1.0, "YES", "YES","SLOT_POWER"},
{"PopCornWep", "PopCornAmmo", "Pop Corn",1.0, "YES", "YES","SLOT_POWER"},
{"PursuitWep", "PursuitAmmo", "Pursuit",1.0, "YES", "YES","SLOT_RANGED"},
{"QuadMissileWep", "QuadMissileAmmo", "Quad Missile",1.0, "YES", "YES","SLOT_POWER"},
{"RainbowBeamWep", "RainbowBeamAmmo", "Rainbow Beam",1.0, "YES", "YES","SLOT_RANGED"},
{"RainFloodWep", "RainFloodAmmo", "Rain Flood",1.0, "YES", "YES","SLOT_SHIELD"},
{"RakuhouhaWep", "RakuhouhaAmmo", "Rakuhouha",1.0, "YES", "YES","SLOT_POWER"},
{"RingTossWep", "RingTossAmmo", "Ring Toss",1.0, "YES", "YES","SLOT_RAPID"},
{"RocketChaingunWep", "RocketChaingunAmmo", "Rocket Chaingun",1.0, "YES", "YES","SLOT_RAPID"},
{"RushCannonWep", "RushCannonAmmo", "Rush Cannon", 1.0, "YES","SLOT_POWER"},
{"ScatterBallWep", "ScatterBallAmmo", "Scatter Balls",1.0, "YES", "YES","SLOT_RANGED"},
{"seedflareWep", "SeedFlareAmmo", "Seed Flare",1.0, "YES", "YES","SLOT_CLOSE"},
{"SelfDestructWep", "BusterAmmo", "Self Destruct",1.0, "YES", "YES","SLOT_POWER"},
{"ShadowForceWep", "ShadowForceAmmo", "Shadow Force",1.0, "YES", "YES","SLOT_NONE"},
{"ShatterStoneWep", "ShatterStoneAmmo", "Shatter Stone",1.0, "YES", "YES","SLOT_RANGED"},
{"ShockMineWep", "MineAmmo", "Shock Mine",1.0, "YES", "YES","SLOT_CLOSE"},
{"SideStarWep", "SideStarAmmo", "Side Star",1.0, "YES", "YES","SLOT_RANGED"},
{"SizzleRocketWep", "SizzleRocketAmmo", "Sizzle Rocket",1.0, "YES", "YES","SLOT_POWER"},
{"SkyUppercutWep", "SkyUppercutAmmo", "Sky Uppercut",1.0, "YES", "YES","SLOT_CLOSE"},
{"FlurrySpreadWep", "FlurryAmmo", "Flurry Spread",1.0, "YES", "YES","SLOT_CLOSE"},
{"SparkManBowWep", "SparkManbowAmmo", "Spark Manbow",1.0, "YES", "YES","SLOT_POWER"},
{"SpeedGearWep", "SpeedAmmo", "Speed Gear",1.0, "YES", "YES","SLOT_RANGED"},
{"SpikeBallWep", "SpikeBallAmmo", "Spike Ball",1.0, "YES", "YES","SLOT_RANGED"},
{"StarToadWep", "StarToadAmmo", "Star Toad",1.0, "YES", "YES","SLOT_SHIELD"},
{"StealthRockWep", "StealthRockAmmo", "Stealth Rock",1.0, "YES", "YES","SLOT_CLOSE"},
{"SteelWingWep", "SteelWingAmmo", "Steel Wing",1.0, "YES", "YES","SLOT_RANGED"},
{"StoneWep", "StoneAmmo", "Stone",1.0, "YES", "YES","SLOT_SHIELD"},
{"StoneWallWep", "StoneWallAmmo", "Stone Wall",1.0, "YES", "YES","SLOT_POWER"},
{"SunSparkWep", "SunSparkAmmo", "Sun Spark",1.0, "YES", "YES","SLOT_RANGED"},
{"SuperArrowWep", "SuperArrowAmmo", "Super Arrow",1.0, "YES", "YES","SLOT_RANGED"},
{"TackleShieldWep", "TackleShieldAmmo", "Tackle Shield",1.0, "YES", "YES","SLOT_SHIELD"},
{"TankArsenalWep", "TankArsenalAmmo", "Tank Arsenal",1.0, "YES", "YES","SLOT_POWER"},
{"TeleportWep", "TeleportAmmo", "Teleport",1.0, "YES", "YES","SLOT_NONE"},
{"ThunderChainWep", "ThunderChainAmmo", "Thunder Chain",1.0, "YES", "YES","SLOT_RAPID"},
{"ThunderFangWep", "ThunderFangAmmo", "Thunder Fang",1.0, "YES", "YES","SLOT_RANGED"},
{"ThunderCloud", "RainbowAmmo", "Thunder Wool",1.0, "YES", "YES","SLOT_RANGED"},
{"TriAttackWep", "TriAttackAmmo", "Tri Attack",1.0, "YES", "YES","SLOT_RANGED"},
{"TripleZapWep", "zapammo", "Triple Zap",1.0, "YES", "YES","SLOT_CLOSE"},
{"TwistLaserWep", "TwistLaserAmmo", "Twist Laser",1.0, "YES", "YES","SLOT_CLOSE"},
{"UnDeadArmyWep", "UnDeadArmyAmmo", "Quake Skull",1.0, "YES", "YES","SLOT_POWER"},
{"VolcanoHandWep", "VolcanoHandAmmo", "Volcano Hand",1.0, "YES", "YES","SLOT_CLOSE"},
{"WaterCutterWep", "WaterCutterAmmo", "Water Cutter",1.0, "YES", "YES","SLOT_RANGED"},
{"WaterShurikenWep", "WaterShurikenAmmo", "Water Shuriken",1.0, "YES", "YES","SLOT_RANGED"},
{"WaterSpoutWep", "WaterSpoutAmmo", "Water Spout",1.0, "YES", "YES","SLOT_CLOSE"},
{"WaveGuideWep", "WaveGuideAmmo", "Wave Guide",1.0, "YES", "YES","SLOT_RANGED"},
{"WildTornadoWep", "WildTornadoAmmo", "Wild Tornado",1.0, "YES", "YES","SLOT_CLOSE"},
{"WillOWispWep", "WillOWispAmmo", "Will O Wisp",1.0, "YES", "YES","SLOT_RANGED"},
{"YokuAttackWep", "YokuAttackAmmo", "Yoku Attack",1.0, "YES", "YES","SLOT_RANGED"},
{"YoyoCutterWep", "YoYoCutterAmmo", "Yoyo Cutter",1.0, "YES", "YES","SLOT_RANGED"},
{"JumpKickWep", "JumpKickAmmo", "Jump Kick",1.0, "YES", "YES","SLOT_CLOSE"},
{"FireFlyWep","FireFlyAmmo","Fire Fly",1.0, "YES", "YES","SLOT_RANGED"},
{"CircuitBreakerWep","CircuitBreakerAmmo","Circuit Breaker",1.0, "YES", "YES","SLOT_RANGED"},
{"SolarFlareWep","SolarFlareAmmo","Solar Flare",1.0, "YES", "YES","SLOT_POWER"},
{"SuguriDashWep","SuguriDashAmmo","Suguri Dash",1.0, "YES", "YES","SLOT_SHIELD"},
{"PulseStopperWep","PulseStopperAmmo","Pulse Stopper",1.0, "YES", "YES","SLOT_RANGED"},
{"CryptCloakWep","CryptCloakAmmo","Crypt Cloak",1.0, "YES", "YES","SLOT_SHIELD"},
{"PhantomFuseWep","PhantomFuseAmmo","Phantom Fuse",1.0, "YES", "YES","SLOT_POWER"},
{"VirusOutbreakWep","VirusOutbreakAmmo","Virus Outbreak",1.0, "YES", "YES","SLOT_SHIELD"},
{"CharadeCloneWep","CharadeCloneAmmo","Charade Clone",1.0, "YES", "YES","SLOT_SHIELD"},
{"ShockGauntletWep","ShockGauntletAmmo","Shock Gauntlet",1.0, "YES", "YES","SLOT_RANGED"},
{"HyperSpaceHoleWep","HyperSpaceHoleAmmo","Hyper Space Hole",1.0, "YES", "YES","SLOT_RANGED"},
{"EggBombWep","EggBombAmmo","Egg Bomb",1.0, "YES", "YES","SLOT_POWER"},
{"WaterPulseWep","WaterPulseAmmo","Water Pulse",1.0, "YES", "YES","SLOT_RANGED"},
{"BoomerangBombWep","BoomerangBombAmmo","Boomerang Bomb",1.0, "YES", "YES","SLOT_POWER"},

{"FriendlyDolphinWep","FriendlyDolphinAmmo","Friendly Dolphin",1.0, "YES", "YES","SLOT_RAPID"},
{"HereticMaceWep","HereticMaceAmmo","Heretic Mace",1.0, "YES", "YES","SLOT_RAPID"},
{"IonicSlashWep","IonicSlashAmmo","Ionic Slash",1.0, "YES", "YES","SLOT_RAPID"},
{"LightningStormWep","LightningStormAmmo","Lightning Storm",1.0, "YES", "YES","SLOT_RANGED"},
{"SugarCubeWep","SugarCubeAmmo","Sugar Cube",1.0, "YES", "YES","SLOT_POWER"},
{"EvilEyeWep","EvilEyeAmmo","Evil Eye",1.0, "YES", "YES","SLOT_POWER"},
{"PowerTreeWep","PowerTreeAmmo","Power Tree",1.0, "YES", "YES","SLOT_POWER"},
{"bmoBhsalFWep","bmoBhsalFAmmo","bmoB hsalF",1.0, "YES", "YES","SLOT_POWER"},
{"ExplosiveHadoukenWep","HadoukenAmmo","Explosive Hadouken",1.0, "YES", "YES","SLOT_POWER"},

{"PorcupineBombWep","PorcupineBombAmmo","Porcupine Bomb",1.0, "YES", "YES","SLOT_POWER"},
{"WraithRingsWep","WraithRingsAmmo","Wraith Rings",1.0, "YES", "YES","SLOT_RANGED"},
{"SkullOfThanatosWep","SkullOfThanatosAmmo","Skull of Thanatos",1.0, "YES", "YES","SLOT_POWER"},
{"AnguishCannonWep","AnguishCannonAmmo","Anguish Cannon",1.0, "YES", "YES","SLOT_RANGED"},
{"CatapultOfDoom1Wep","CatapultofDoomAmmo","Catapult of Doom",1.0, "YES", "YES","SLOT_POWER"},
{"CatapultOfDoom2Wep","CatapultofDoomAmmo","Catapult of Doom",1.0, "YES", "YES","SLOT_RAPID"},
{"CepheusTowerWep","CepheusTowerAmmo","Cepheus Tower",1.0, "YES", "YES","SLOT_POWER"},
{"ArchonCubeWep","ArchonCubeAmmo","Archon Cube",1.0, "YES", "YES","SLOT_RANGED"},
{"GenoBlastWep","GenoBlastAmmo","Geno Blast",1.0, "YES", "YES","SLOT_POWER"}
};

str BusterUpgrades[MAX_BUSTERS] =
{
"ProtoUpgrade",
"ArrowBusterUpgrade",
"LaserBusterUpgrade",
"BassUpgrade",
"DuoFistUpgrade",
"AdaptorUpgrade",
"TrebleBoostUpgrade"/*,
"MegaArmUpgrade"*/
};


//Color Translation script
script 998 (int weap, int nosound) 
{

	if(nosound==0)
		LocalAmbientSound("menu/cursor",127); // Play weapon switch noise

	if(CheckInventory("NoWeaponTranslation")>0){
	terminate;
	}
	
	If(IsTeamGame==1 && CheckInventory("NoTeamTranslation")==0)
		{
		Switch(PlayerTeam())
			{
			Case 0:
				weap = COLOR_LIGHT;
				break;
			Case 1:
				weap = COLOR_WILY;
				break;
			Case 2:
				weap = COLOR_COSSACK;
				break;
			Case 3:
				weap = COLOR_KING;
				break;
			}
		}
	
	Thing_SetTranslation(0, weap);
}

Script 993 OPEN //Defines translations colors
{
	If(ACS_ExecuteWithResult(975, 1)==1)
	{
		IsTeamGame = 1; // If it's a team game, change the variable.
	}
}


Script 992 (int amount, int AmmoMode) // Script to determine which weapon to give ammo to
{
	Switch(AmmoMode)
	{
	Case 1: // If this is an mtank, give exactly the ammo of each weapon and terminate
		For(int i = 0; i < MAX_WEAPONS_GLOBAL; i++)
		{
			If(CheckInventory(weapons_ammo[i][0]) == 1)
			{
				GiveInventory(weapons_ammo[i][1], GetAmmoCapacity(weapons_ammo[i][1]));
			}
		}
		terminate;

	Case 2: // Double ammo for Energy Saver
		For(i = 0; i < MAX_WEAPONS_GLOBAL; i++)
		{
			If(CheckInventory(weapons_ammo[i][1]) > 0)
			{
				GiveInventory(weapons_ammo[i][1], CheckInventory(weapons_ammo[i][1]));
			}
		}
		terminate;
	}
	
	
	// Which weapon player currently has equipped.
	int ThisWeapon = WhichWeapon();

	//print(i:ThisWeapon);

	If(CheckInventory("EnergyBalancerActive"))
	{
		If(CheckInventory(weapons_ammo[ThisWeapon][1]) == GetAmmoCapacity(weapons_ammo[i][1]) || ThisWeapon < 0)  // If player has the Energy Balancer, then check to see if the currently selected weapon is not at maximum
		{
			ThisWeapon = EnergyBalancer(); // Finds the lowest ammo weapon using the Energy Balancer function and sets it as the weapon to fill
		}
	}

	If(ThisWeapon >= 0) //If this weapon is not a buster
	{
		// [Lego] Ammo capsules now specify a percentage
		// This percentage is then converted to fixed, then divided by 100.
		int percentage = FixedMul(FixedDiv(amount << 16, 100.0), weapons_ammo[ThisWeapon][3]);
		
		amount = (GetAmmoCapacity(weapons_ammo[ThisWeapon][1]) * percentage) >> 16;
		//printbold(s:"Percentage is: ", f:percentage, s:"\nAmount is:", i:amount);
			
		int AmmoMultiplier = 1.0;
		
		Amount = FixedMul(Amount, AmmoMultiplier);
		//printbold(i:Amount);
		GiveInventory(weapons_ammo[ThisWeapon][1], amount);
	}
}


script 984 (void) // Does the player have the energy balancer or a weapon that is not full? If so, pickup ammo
{
	if(CheckInventory("EnergyBalancerActive")==1)
	{
		SetResultValue( TRUE );
	}
	else
	{
		int ThisWeapon = WhichWeapon();

		if(CheckInventory(weapons_ammo[ThisWeapon][1]) == GetAmmoCapacity(weapons_ammo[ThisWeapon][1]) || ThisWeapon < 0)
		{
			SetResultValue( FALSE );
		}
		else
		{
			SetResultValue( TRUE );
		}
	}
}


// Player Color (alternate, no sound)
//
script 991 (int weap)
{
ACS_ExecuteAlways(998, 0, weap, 1);
}

//Eddie Random Weapon script
Script 256 (void)
{
	int i = 0;
	int TotalWeapons = MAX_WEAPONS_GLOBAL + MAX_BUSTERS;
	int ThePlayer = ACS_ExecuteWithResult(257);
	bool finished = false;
	
	while(!finished)
	{
		int RandomSelection = random(1, TotalWeapons)-1;
		
		if(GetCvar("dirp_allweps") == 1)
		{
			RandomSelection = Random(1, TotalWeapons-1);
		}
		else
		{
			RandomSelection = Random(87, TotalWeapons-1); //dirp only
		}
		int WeaponName;
		
		if(RandomSelection >= MAX_WEAPONS_GLOBAL)
		{
			RandomSelection-=MAX_WEAPONS_GLOBAL;
			WeaponName = BusterUpgrades[RandomSelection];
		}
		else
		{
			WeaponName = Weapons_Ammo[RandomSelection][0];
		}
		
		//printbold(i:RandomSelection, s:" - ", s:WeaponName);
		
		if(Weapons_Ammo[RandomSelection][4] != "NO")
		{
			//PrintBold(s:WeaponName);
			if(CheckActorInventory(ThePlayer, WeaponName) || ThingCountName(WeaponName, 0) > 0)
			{
				//PrintBold(s:WeaponName, s:" is invalid!");
				i++;
				if(i>35){
				finished = true;
				}
			}
			else
			{
				finished = true;
			}
		}
	}

	// [Lego] This would cause the weapon to not spawn under certain circumstances.
	//SpawnProjectile(0, WeaponName, GetActorAngle(0)>>8, 75, 40, 1.0, 0);
	
	int tempTID = thePlayer + 3000;
	SpawnForced(weaponName, GetActorX(0), GetActorY(0), GetActorZ(0), tempTID);
	ThrustThing(GetActorAngle(0)>>8, 9, false, tempTID);
	ThrustThingZ(tempTID, 10, 0, 0);
	Thing_ChangeTID(tempTID, 0);
}


// [Mess] Weapon Energy color script - "mm8bdm_noenergycolors true" to disable
Script 255 ENTER CLIENTSIDE
{
	If(PlayerIsBot(PlayerNumber()))
	{
		terminate; //Since this is pointless for bots
	}
	Delay(10);
	
	If(GetCvar("mm8bdm_noenergycolors") == 0)
	{
		// Declare the console variable [old method]
		SetUserCvar(PlayerNumber(), "mm8bdm_noenergycolors", 0);
	}
	
	If(GetCvar("mm8bdm_noenergycolors") > 0)
	{
		SetUserCvar(PlayerNumber(), "mm8bdm_noenergycolors", 1);
		terminate;
	}
	
	While(PlayerInGame(ConsolePlayerNumber()))
	{
		If(PlayerNumber()!=ConsolePlayerNumber())
		{
			SetActivator(ConsolePlayerNumber()+1000);
			restart;
		}
		Thing_SetTranslation(999, -1);
		Delay(1);
	}
}

// [Mess] Energy Balancer Functions
Function int WhichWeapon(void) // Which weapon is the player currently using.  From weapons_ammo array
{
For(int i = 0; i < MAX_WEAPONS_GLOBAL; i++)
	{
	If(CheckWeapon(weapons_ammo[i][0]))
		{
		If(weapons_ammo[i][3] > 0.0){Return i;}
		}
	}
Return -1;
}

Function int EnergyBalancer(void) // Finds out which weapon has the lowest ammo ratio wise from the players inventory
{
int CurrentRatio;
int MinRatio = 255.0;
int LowestWeapon = -1;

For(int w = 0; w < MAX_WEAPONS_GLOBAL; w++)
	{
	If(CheckInventory(weapons_ammo[w][0]))
		{
		CurrentRatio = FixedDiv(CheckInventory(weapons_ammo[w][1]), GetAmmoCapacity(weapons_ammo[w][1]));
		If(CurrentRatio < MinRatio && weapons_ammo[w][3] > 0.0)
			{
			MinRatio = CurrentRatio;
			LowestWeapon = w;
			}
		}
	}
return LowestWeapon;
}

function int BotWeaponSelect (void)
{
int SelectedWeapon;
int WeaponName;
int i = 0;

While(i <= 15)
	{
	SelectedWeapon = Random(0, MAX_WEAPONS_GLOBAL + MAX_BUSTERS-1);
	If(SelectedWeapon >= MAX_WEAPONS_GLOBAL)
		{
		WeaponName = BusterUpgrades[SelectedWeapon-MAX_WEAPONS_GLOBAL];
		}
	Else
		{
		WeaponName = weapons_ammo[SelectedWeapon][0];
		If(WeaponName == "TrebleBoost"){WeaponName = "TrebleBoostUpgrade";}
		}
	i++;
	If(CheckInventory(WeaponName)){Return(SelectedWeapon);}
	}
Return(-1);
}



// Rotation scripts
// Legacy, previously used for Power Stone and Top Spin.
script 990 (int whichrotate)
{
	// Top Spin
	if(whichrotate==1){
	SetActorAngle (ActivatorTID(), GetActorAngle (ActivatorTID()) - 0.06);
	}
	// Power Stone
	if(whichrotate==2){
	SetActorAngle (ActivatorTID(), GetActorAngle (ActivatorTID()) - 0.05);
	}
}

// Health checker for hit-based shields.
// hits - the number of hits the shield can tank for the player
// customProtect (true or false) - whether the shield uses the generic protection or its own
script 982 (int hits, int customProtect)
{
	if(hits == 0)
	{
		hits = 1;
	}
	else if(hits > 999)
	{
		//Log(s:"\cgSCRIPT 982: SPECIFIED HITS VALUE TOO HIGH. TERMINATING.");
		terminate;
	}
	
	int health = GetActorProperty(0, APROP_HEALTH);
	int maxHealth = GetActorProperty(0, APROP_SPAWNHEALTH);
	int healCurrent = health;
	bool loanHP = false;
	
	if(maxHealth == 0)
	{
		maxHealth = 100;
	}
	
	TakeInventory("ShieldHits", 999);
	GiveInventory("ShieldHits", hits);
	
	SetPlayerProperty(0, 1, PROP_BUDDHA);
	
	if(health < 2)
	{
		healCurrent = 2;
		loanHP = true;
		SetActorProperty(0, APROP_HEALTH, 2);
	}
	
	while(CheckInventory("ShieldHits")>0 && CheckInventory("StopHitShield")==0)
	{
		Delay(1);
		if(GetActorProperty(0, APROP_HEALTH) > health)
		{
			health = GetActorProperty(0, APROP_HEALTH);
			healCurrent = GetActorProperty(0, APROP_HEALTH);
		}
		
		if(healCurrent > GetActorProperty(0, APROP_HEALTH))
		{
			TakeInventory("ShieldHits", 1);
			
			if(CheckInventory("ShieldHits")>0)
			{
				SetActorProperty(0, APROP_HEALTH, healCurrent);
			}
			else
			{
				SetActorProperty(0, APROP_HEALTH, health);
			}
			
			if(!customProtect)
			{
				GiveInventory("HitShieldProtection", 1);
			}
		}
	}
	
	if(loanHP && GetActorProperty(0, APROP_HEALTH) < maxHealth)
	{
		SetActorProperty(0, APROP_HEALTH, GetActorProperty(0, APROP_HEALTH)-1);
	}
	
	if(CheckInventory("ShieldCheck")==0 && CheckInventory("BasicArmor")==0 && !customProtect)
	{
		GiveInventory("HitShieldProtection", 1);
	}
	
	SetPlayerProperty(0, 0, PROP_BUDDHA);
}
// Time Stopper HUD FX
//
script 986 (void)
{
SetHudSize(256,224,0);
SetFont("FLASHS1");
HudMessageBold(s:"A"; HUDMSG_PLAIN,50,CR_UNTRANSLATED,128.0,112.0,0.0);
Delay(4);
SetFont("FLASHS2");
HudMessageBold(s:"A"; HUDMSG_PLAIN,50,CR_UNTRANSLATED,128.0,112.0,0.0);
Delay(4);
SetFont("FLASHS3");
HudMessageBold(s:"A"; HUDMSG_PLAIN,50,CR_UNTRANSLATED,128.0,112.0,0.0);
Delay(4);
SetFont("FLASHS4");
HudMessageBold(s:"A"; HUDMSG_PLAIN,50,CR_UNTRANSLATED,128.0,112.0,0.0);
Delay(4);
SetFont("FLASHS5");
HudMessageBold(s:"A"; HUDMSG_PLAIN,50,CR_UNTRANSLATED,128.0,112.0,0.0);
Delay(4);
SetFont("FLASHS6");
HudMessageBold(s:"A"; HUDMSG_PLAIN,50,CR_UNTRANSLATED,128.0,112.0,0.0);
Delay(4);
SetFont("FLASHS7");
HudMessageBold(s:"A"; HUDMSG_PLAIN,50,CR_UNTRANSLATED,128.0,112.0,0.0);
Delay(4);
SetFont("FLASHS8");
HudMessageBold(s:"A"; HUDMSG_PLAIN,50,CR_UNTRANSLATED,128.0,112.0,0.0);
Delay(4);
SetFont("FLASHS9");
HudMessageBold(s:"A"; HUDMSG_PLAIN,50,CR_UNTRANSLATED,128.0,112.0,0.0);
Delay(4);
Restart;
}

// LMS Weapon Randomization
//
script 981 (void)
{
// Check server CVAR to see if weapons are enabled (default true)
if(GetCvar("mm8bdm_sv_nolmsweapons")==true){terminate;}

// Check server CVAR to see if random start weapon is enabled
if(GetCvar("mm8bdm_sv_randomstartweapon")== true){
	str rweapon = weapons_ammo[random(0,MAX_WEAPONS_GLOBAL)][0];
	GiveInventory(rweapon,1);
	SetWeapon(rweapon);
	}

// Check if the game is actually LMS
if(GetCvar("lastmanstanding")==1||GetCvar("teamlms")==1){
	// Ignore if game is set to instagib
	if(GetCvar("instagib")==1){terminate;}
	
	while(GetGameModeState()!=GAMESTATE_COUNTDOWN && GetGameModeState()!=GAMESTATE_INPROGRESS && ShieldWepRandom == 0)
    {
        Delay(5);
    }
	
	Delay(5);
	
	// Take bots Mega Buster so they actually use a different weapon (limited to ranged weapon at present)
	if(PlayerIsBot(PlayerNumber())){
		TakeInventory("MegaBuster",1);
	}
	
	// Give players one of each weapon type at random
	
	GiveInventory(weapons_ammo[ShieldWepRandom][0],1);
	GiveInventory(weapons_ammo[RapidWepRandom][0],1);
	GiveInventory(weapons_ammo[CloseWepRandom][0],1);
	GiveInventory(weapons_ammo[PowerWepRandom][0],1);
	GiveInventory(weapons_ammo[RangedWepRandom][0],1);
	Delay(1);
	
	// Give the bot the Mega Buster back
	if(PlayerIsBot(PlayerNumber())){
		GiveInventory("MegaBuster",1);
	}
}
}

// A script to generate random numbers for LMS weapons
//
script 980 OPEN
{
	int WeaponSelect;
	If(ACS_ExecuteWithResult(975) != 2){terminate;}
	int startingPoint = 0;
	if(GetCVAR("dirp_allweps") == 0){startingPoint = 87;}
	do
	{
		Delay(5);
	}
	while(GetGameModeState()!=GAMESTATE_COUNTDOWN);
	
	//Ranged Wep
	do
	{
		WeaponSelect = Random(startingPoint, MAX_WEAPONS_GLOBAL-1);	
	}
	while(weapons_ammo[WeaponSelect][6] != "SLOT_RANGED"); //AKA 2
	RangedWepRandom = WeaponSelect;

	//Rapid Wep
	do
	{
		WeaponSelect = Random(startingPoint, MAX_WEAPONS_GLOBAL-1);	
	}
	while(weapons_ammo[WeaponSelect][6] != "SLOT_RAPID"); //AKA 3
	RapidWepRandom = WeaponSelect;

	//Close Wep
	do
	{
		WeaponSelect = Random(startingPoint, MAX_WEAPONS_GLOBAL-1);	
	}
	while(weapons_ammo[WeaponSelect][6] != "SLOT_CLOSE"); //AKA 4
	CloseWepRandom = WeaponSelect;

	//Power Wep
	do
	{
		WeaponSelect = Random(startingPoint, MAX_WEAPONS_GLOBAL-1);	
	}
	while(weapons_ammo[WeaponSelect][6] != "SLOT_POWER"); //AKA 5
	PowerWepRandom = WeaponSelect;
	

	//Shield Wep
	do
	{
		WeaponSelect = Random(startingPoint, MAX_WEAPONS_GLOBAL-1);	
	}
	while(weapons_ammo[WeaponSelect][6] != "SLOT_SHIELD"); //AKA 7
	ShieldWepRandom = WeaponSelect;

}

// Script that is executed everytime a weapon's NoAmmo state is called.
script 979 (void)
{

if(CheckInventory("NoAmmoSoundCooldown")==0){
	LocalAmbientSound("weapon/noammo",128);
	GiveInventory("NoAmmoSoundCooldown", 1);
}

If(PlayerIsBot(PlayerNumber()))
	{
	/*
	if(CheckInventory("TimeStopperWep")>0)
		{
		TakeInventory("TimeStopperWep",1);
		GiveInventory("MegaBuster",1);
		SetWeapon("MegaBuster");
		}
	*/
	if(CheckInventory("SkullBarrierWep")>0)
		{
		TakeInventory("SkullBarrierWep",1);
		GiveInventory("MegaBuster",1);
		SetWeapon("MegaBuster");
		}
	SetPlayerProperty(0,1,4);
	ACS_Execute(992, 0, 255);
	Delay(15);
	SetPlayerProperty(0,0,4);
	}
}

// Scorch Wheel and instagib speed adjuster
//
script 191 (int prop, int mult, int div)
{
SetActorProperty(0,prop,((1.0)*mult)/div);
}

Script 252 ENTER
{
if(PlayerIsBot(PlayerNumber()))
	{
	int xPos;
	int yPos;
	int d = 10;
	int BotWeapon;
	int MaxPlayers = GetMaxPlayers();
	Delay(35);
	if(CheckInventory("NoBotFix")==1){terminate;}
	While(GetActorProperty(ActivatorTID(), APROP_HEALTH) > 0 && !CheckInventory("IsDead")==1)
		{
		xPos = GetActorX(0);
		yPos = GetActorY(0);
		Delay(35);
		BotWeapon = BotWeaponSelect();
		If(d <= 0 && BotWeapon >= 0)
			{
			If(BotWeapon >= MAX_WEAPONS_GLOBAL)
				{
				UseInventory(BusterUpgrades[BotWeapon-MAX_WEAPONS_GLOBAL]);
				d=Random(15, 25);
				}
			Else
				{
				If(weapons_ammo[BotWeapon][0] == "TrebleBoost")
					{
					UseInventory("TrebleBoostUpgrade");
					d=Random(15, 25);
					}
				Else
					{
					SetWeapon(weapons_ammo[BotWeapon][0]);
					//printbold(s:weapons_ammo[BotWeapon][0]);
					d=Random(5, 15);
					}
				}
			}
		Else
			{
			If(d > 0){d--;}
			}
		if(ACS_ExecuteWithResult(972)==2 || GetActorProperty(ActivatorTID(), APROP_HEALTH) <= 0 || CheckInventory("IsDead")==1){terminate;}

		}
	}
}

// [Lego] To keep Plug Ball from travelling across sky planes
//
script 206 (void)
{
	int checkDistance = false;
	while(CheckInventory("Once")>0 && ThingCountName("PlugBall", T_NONE)>0)
	{
		if(CheckActorFloorTexture(0, "F_SKY1"))
		{
			if(GetActorVelZ(0) < 0)
			{
				checkDistance = true;
			}
			
			if((GetActorZ(0) - GetActorFloorZ(0)) < 10.0 && checkDistance)
			{
				SetActorState(0, "Death");
			}
		}
		else
		{
			checkDistance = false;
		}
		Delay(1);
	}
}

// Script called by most shield warpers
Script "core_shieldwarper" (int noshieldcheck) CLIENTSIDE
{
	int Player = ACS_NamedExecuteWithResult("core_gettarget",0);
	int Weapon = ACS_NamedExecuteWithResult("core_getplayerweapon", Player - 1000);

	// Loop if shield is active
	while(GetActorProperty(Player, APROP_HEALTH)>0
	&& ACS_NamedExecuteWithResult("core_getplayerweapon", Player - 1000) == Weapon
	){
		// Used for warpers using ShieldCheck
		if(noshieldcheck == 0 && CheckActorInventory(Player, "ShieldCheck") == 0){
		break;
		}
		Delay(1);
	}
	
	// Remove
	Thing_Remove(0);
}

// Script called by Skull Barrier
Script "core_shieldwarper_skull" (void) CLIENTSIDE
{
	int Player = ACS_NamedExecuteWithResult("core_gettarget",0);
	
	// Loop if shield is active
	while(GetActorProperty(Player, APROP_HEALTH)>0
	&& CheckActorInventory(Player, "SkullShieldCheck") > 0
	){
		Delay(1);
	}
	
	// Remove
	Thing_Remove(0);
}

// Script called by Scorch Wheel
Script "core_shieldwarper_scorch" (void) CLIENTSIDE
{
	int Player = ACS_NamedExecuteWithResult("core_gettarget",0);
	
	// Loop if shield is active
	while(GetActorProperty(Player, APROP_HEALTH)>0
	&& CheckActorInventory(Player, "ScorchWheelPowerup")>0
	){
		Delay(1);
	}
	
	// Remove
	Thing_Remove(0);
}

// Script called by Jewel Satellite
Script "core_shieldwarper_jewel" (int jewelno) CLIENTSIDE
{
	int Player = ACS_NamedExecuteWithResult("core_gettarget",0);
	int Weapon = ACS_NamedExecuteWithResult("core_getplayerweapon", Player - 1000);
	
	// Loop if shield is active
	while(GetActorProperty(Player, APROP_HEALTH)>0
	&& ACS_NamedExecuteWithResult("core_getplayerweapon", Player - 1000) == Weapon
	&& CheckActorInventory(Player, "ShieldCheck") > 0
	&& CheckActorInventory(Player, "JewelShieldCheck") > jewelno
	){
		Delay(1);
	}
	
	// Remove
	Thing_Remove(0);
}

// Return the actor's target
Script "core_gettarget" (void)
{
	SetActivatorToTarget(0);
	SetResultValue(ActivatorTID());
}

// Return a player's current weapon
Script "core_getplayerweapon" (int playerno)
{
	SetActivator(playerno + 1000);
	SetResultValue(GetWeapon());
}